apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openfaas
    component: alertmanager
  name: alertmanager
  namespace: "openfaas"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
      annotations:
        sidecar.istio.io/inject: "true"
        checksum/alertmanager-config: "aabdea2830cf4f2426a0417cfacf5f5e203589ce226848e413987c105d4cad89"
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.18.0
          imagePullPolicy: Always
          command:
            - "alertmanager"
            - "--config.file=/alertmanager.yml"
            - "--storage.path=/alertmanager"
            - "--cluster.listen-address="
          livenessProbe:
            httpGet:
              path: /-/ready
              port: 9093
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9093
            timeoutSeconds: 30
          ports:
            - containerPort: 9093
              protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              memory: 25Mi
          volumeMounts:
            - mountPath: /alertmanager.yml
              name: alertmanager-config
              subPath: alertmanager.yml
            - name: auth
              readOnly: true
              mountPath: "/var/secrets"
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-config
            items:
              - key: alertmanager.yml
                path: alertmanager.yml
                mode: 0644
        - name: auth
          secret:
            secretName: basic-auth
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openfaas
    component: basic-auth-plugin
  name: basic-auth-plugin
  namespace: "openfaas"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basic-auth-plugin
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "false"
      labels:
        app: basic-auth-plugin
    spec:
      volumes:
        - name: auth
          secret:
            secretName: basic-auth
      containers:
        - name:  basic-auth-plugin
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
          image: openfaas/basic-auth-plugin:0.18.18
          imagePullPolicy: Always
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 10001
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            timeoutSeconds: 5
          env:
            - name: secret_mount_path
              value: "/var/secrets"
            - name: basic_auth
              value: "true"
          volumeMounts:
            - name: auth
              readOnly: true
              mountPath: "/var/secrets"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-idler
  namespace: "openfaas"
  labels:
    app: openfaas
    component: faas-idler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: faas-idler
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "false"
      labels:
        app: faas-idler
    spec:
      containers:
        - name: faas-idler
          resources:
            requests:
              memory: 64Mi
          image: openfaas/faas-idler:0.3.0
          imagePullPolicy: Always
          env:
            - name: gateway_url
              value: "http://gateway.openfaas:8080/"
            - name: prometheus_host
              value: "prometheus.openfaas"
            - name: prometheus_port
              value: "9090"
            - name: inactivity_duration
              value: 30m
            - name: reconcile_interval
              value: 2m
          command:
            - /home/app/faas-idler
            - -dry-run=true
          volumeMounts:
            - name: auth
              readOnly: true
              mountPath: "/var/secrets/"
      volumes:
        - name: auth
          secret:
            secretName: basic-auth
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openfaas
    component: gateway
  name: gateway
  namespace: "openfaas"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
        prometheus.io.port: "8082"
      labels:
        app: gateway
    spec:
      serviceAccountName: openfaas-operator
      volumes:
        - name: faas-netes-temp-volume
          emptyDir: {}
        - name: auth
          secret:
            secretName: basic-auth
      containers:
        - name: gateway
          resources:
            requests:
              cpu: 50m
              memory: 120Mi
          image: openfaas/gateway:0.18.18
          imagePullPolicy: Always
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 10001
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            timeoutSeconds: 5
          env:
            - name: read_timeout
              value: "65s"
            - name: write_timeout
              value: "65s"
            - name: upstream_timeout
              value: "60s"
            - name: functions_provider_url
              value: "http://127.0.0.1:8081/"
            - name: direct_functions
              value: "true"
            - name: direct_functions_suffix
              value: "openfaas-fn.svc.cluster.local"
            - name: function_namespace
              value: "openfaas-fn"
            - name: faas_nats_address
              value: "nats.openfaas.svc.cluster.local"
            - name: faas_nats_port
              value: "4222"
            - name: faas_nats_channel
              value: "faas-request"
            - name: basic_auth
              value: "true"
            - name: secret_mount_path
              value: "/var/secrets"
            - name: auth_proxy_url
              value: "http://basic-auth-plugin.openfaas:8080/validate"
            - name: auth_pass_body
              value: "false"
            - name: scale_from_zero
              value: "true"
            - name: max_idle_conns
              value: "1024"
            - name: max_idle_conns_per_host
              value: "1024"
          volumeMounts:
            - name: auth
              readOnly: true
              mountPath: "/var/secrets"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
        - name: operator
          resources:
            requests:
              cpu: 50m
              memory: 120Mi
          image: openfaas/faas-netes:0.12.3
          imagePullPolicy: Always
          command:
            - ./faas-netes
            - -operator=true
          env:
            - name: port
              value: "8081"
            - name: function_namespace
              value: "openfaas-fn"
            - name: profiles_namespace
              value: "openfaas"
            - name: read_timeout
              value: "60s"
            - name: write_timeout
              value: "60s"
            - name: image_pull_policy
              value: "Always"
            - name: http_probe
              value: "true"
            - name: set_nonroot_user
              value: "false"
            - name: readiness_probe_initial_delay_seconds
              value: "2"
            - name: readiness_probe_timeout_seconds
              value: "1"
            - name: readiness_probe_period_seconds
              value: "2"
            - name: liveness_probe_initial_delay_seconds
              value: "2"
            - name: liveness_probe_timeout_seconds
              value: "1"
            - name: liveness_probe_period_seconds
              value: "2"
            - name: cluster_role
              value: "false"
          ports:
            - containerPort: 8081
              protocol: TCP
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openfaas
    component: nats
  name: nats
  namespace: "openfaas"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io.scrape: "false"
      labels:
        app: nats
    spec:
      containers:
        - name:  nats
          resources:
            requests:
              memory: 120Mi
          image: nats-streaming:0.17.0
          imagePullPolicy: Always
          ports:
            - containerPort: 4222
              protocol: TCP
          command: ["/nats-streaming-server"]
          args:
            - --store
            - memory
            - --cluster_id
            - faas-cluster
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openfaas
    component: prometheus
  name: prometheus
  namespace: "openfaas"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        sidecar.istio.io/inject: "true"
        checksum/prometheus-config: "14c0ae176d8585d6f85a9a0c93d69b7cc0757a1c17f3015297db06e322683049"
    spec:
      serviceAccountName: openfaas-prometheus
      containers:
        - name: prometheus
          resources:
            requests:
              memory: 512Mi
          image: prom/prometheus:v2.11.0
          command:
            - "prometheus"
            - "--config.file=/etc/prometheus/prometheus.yml"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            timeoutSeconds: 30
          ports:
            - containerPort: 9090
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-config
              subPath: prometheus.yml
            - mountPath: /etc/prometheus/alert.rules.yml
              name: prometheus-config
              subPath: alert.rules.yml
            - mountPath: /prometheus/data
              name: prom-data
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
            items:
              - key: prometheus.yml
                path: prometheus.yml
                mode: 0644
              - key: alert.rules.yml
                path: alert.rules.yml
                mode: 0644
        - name: prom-data
          emptyDir: {}
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openfaas
    component: queue-worker
  name: queue-worker
  namespace: "openfaas"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue-worker
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "false"
      labels:
        app: queue-worker
    spec:
      volumes:
        - name: auth
          secret:
            secretName: basic-auth
      containers:
        - name:  queue-worker
          resources:
            requests:
              cpu: 50m
              memory: 120Mi
          image: openfaas/queue-worker:0.11.2
          imagePullPolicy: Always
          env:
            - name: faas_nats_address
              value: "nats.openfaas.svc.cluster.local"
            - name: faas_nats_channel
              value: "faas-request"
            - name: faas_nats_queue_group
              value: "faas"
            - name: faas_gateway_address
              value: "gateway.openfaas.svc.cluster.local"
            - name: "gateway_invoke"
              value: "true"
            - name: faas_function_suffix
              value: ".openfaas-fn.svc.cluster.local"
            - name: max_inflight
              value: "1"
            - name: ack_wait    # Max duration of any async task / request
              value: 60s
            - name: secret_mount_path
              value: "/var/secrets"
            - name: basic_auth
              value: "true"
          volumeMounts:
            - name: auth
              readOnly: true
              mountPath: "/var/secrets"
      nodeSelector:
        beta.kubernetes.io/arch: amd64
